{"version":3,"sources":["data/14876504_correct_by_robotsound_preview.mp3","data/23205030_game-show-buzzer-wrong-answer_by_floraphonic_preview.mp3","components/addPlayers.js","data/questions.js","components/game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AddPlayers","onChange","e","setState","target","id","value","onSubmit","props","history","push","pathname","state","players","onAdd","preventDefault","name","className","style","paddingLeft","noValidate","this","class","type","htmlFor","width","borderRadius","letterSpacing","marginTop","onClick","position","Component","PlayerList","listItems","map","player","i","key","SET1","theme","question","answers","answer","answer2","condition","Game","playerScores","originalOrderPlayerScores","misses","questions","currentRound","allOut","revealAllAnswers","currentPlayer","score","colour","wrongAnswers","initialiseGame","bind","shufflePlayers","getColour","updateResult","sortScores","advancePlayer","showAnswers","nextRound","undoLastAnswer","location","outPlayers","forEach","length","result","scoreChangeValue","outcome","pop","scoreChange","allPlayersOut","currentPlayerName","currentIndex","findIndex","nextIndex","found","undefined","forceUpdate","concat","console","log","sortedScores","sort","player1","player2","temporaryValue","randomIndex","newPlayerScores","Math","floor","random","mainScreen","FinalResult","Fragment","Controls","buttons","endRound","confirmAlert","title","message","label","missesList","miss","guess","height","classnames","minHeight","backgroundColor","margin","marginLeft","duration","Leaderboard","color","includes","blink","Round","playAudio","getResult","newProps","audio","play","trim","wrongAudio","Audio","wrong","correctAudio","correct","find","toLowerCase","hasOwnProperty","used","indexOf","JSON","parse","stringify","playerGuessFragment","alignItems","numAnswers","submittedAnswer","AnswerFields","newAnswers","unguessedAnswer","answerFields","AnswerField","answerText","text","backgroundColour","marginBottom","textAlign","border","backgroundImage","App","basename","process","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,oE,mBCA3CD,EAAOC,QAAU,IAA0B,2F,6MCGrCC,G,wDACJ,aAAe,IAAD,8BACZ,gBAOFC,SAAW,SAACC,GACV,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SAT5B,EAWdC,SAAW,SAACL,GACV,EAAKM,MAAMC,QAAQC,KAAK,CACtBC,SAAU,QACVC,MAAO,CAAEC,QAAS,EAAKD,MAAMC,YAdnB,EAiBdC,MAAQ,SAACZ,GACPA,EAAEa,iBACF,EAAKH,MAAMC,QAAQH,KAAK,EAAKE,MAAMI,MACnC,EAAKb,SAAS,CAAEU,QAAS,EAAKD,MAAMC,QAASG,KAAM,MAlBnD,EAAKJ,MAAQ,CACXI,KAAM,GACNH,QAAS,IAJC,E,qDAwBZ,OACE,yBAAKI,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,UAAUC,MAAO,CAAEC,YAAa,aAC7C,4BACE,0CADF,aAMN,yBAAKF,UAAU,iBACb,yBAAKA,UAAU,oBACb,0BAAMG,YAAU,EAACb,SAAUc,KAAKd,UAC9B,yBAAKe,MAAM,OACT,yBAAKL,UAAU,sBACb,2BACEhB,SAAUoB,KAAKpB,SACfK,MAAOe,KAAKT,MAAMI,KAClBX,GAAG,OACHkB,KAAK,SAEP,2BAAOC,QAAQ,QAAf,SAEF,yBAAKP,UAAU,UACb,4BACEC,MAAO,CACLO,MAAO,QACPC,aAAc,MACdC,cAAe,QACfC,UAAW,QAEbC,QAASR,KAAKP,MACdG,UAAU,kEARZ,SAeJ,yBACEA,UAAU,oBACVC,MAAO,CAAEC,YAAa,aAEtB,4BACED,MAAO,CACLO,MAAO,QACPC,aAAc,MACdC,cAAe,QACfC,UAAW,QAEbL,KAAK,SACLN,UAAU,mEARZ,gBAcJ,yBAAKA,UAAU,WACb,yBAAKC,MAAO,CAAEY,SAAU,aACtB,kBAAC,EAAD,CAAYjB,QAASQ,KAAKT,MAAMC,mB,GArFvBkB,cA+FnBC,E,uKAEF,IAAMC,EAAYZ,KAAKb,MAAMK,QAAQqB,KAAI,SAACC,EAAQC,GAAT,OACvC,wBAAIC,IAAKD,GAAID,MAGf,OACE,6BACE,uCACA,4BAAKF,Q,GATYF,aAeV/B,I,8BCjHFsC,EAAO,CAClB,CACEC,MAAO,WACPC,SACE,2EACFC,QAAS,CACP,CACEC,OAAQ,qBACRpC,MAAO,eAET,CACEoC,OAAQ,sBACRpC,MAAO,eAET,CACEoC,OAAQ,iBACRpC,MAAO,eAET,CACEoC,OAAQ,oBACRpC,MAAO,eAET,CACEoC,OAAQ,kBACRpC,MAAO,eAET,CACEoC,OAAQ,iBACRpC,MAAO,eAET,CACEoC,OAAQ,wBACRpC,MAAO,eAET,CACEoC,OAAQ,kBACRpC,MAAO,eAET,CACEoC,OAAQ,uBACRpC,MAAO,eAET,CACEoC,OAAQ,kBACRpC,MAAO,eAET,CACEoC,OAAQ,oBACRpC,MAAO,eAET,CACEoC,OAAQ,gBACRpC,MAAO,eAET,CACEoC,OAAQ,cACRpC,MAAO,eAET,CACEoC,OAAQ,eACRpC,MAAO,eAET,CACEoC,OAAQ,gBACRpC,MAAO,eAET,CACEoC,OAAQ,oBACRpC,MAAO,eAET,CACEoC,OAAQ,eACRpC,MAAO,eAET,CACEoC,OAAQ,iBACRpC,MAAO,eAET,CACEoC,OAAQ,eACRpC,MAAO,eAET,CACEoC,OAAQ,eACRpC,MAAO,aAIb,CACEiC,MAAO,QACPC,SAAU,yDACVC,QAAS,CACP,CACEC,OAAQ,gBACRpC,MAAO,qCAET,CACEoC,OAAQ,oBACRpC,MAAO,uCAET,CACEoC,OAAQ,cACRpC,MAAO,mCAET,CACEoC,OAAQ,iBACRpC,MAAO,4CAET,CACEoC,OAAQ,iBACRpC,MAAO,uCAET,CACEoC,OAAQ,kBACRpC,MAAO,8CAET,CACEoC,OAAQ,gBACRpC,MAAO,+CAET,CACEoC,OAAQ,kBACRpC,MAAO,wCAET,CACEoC,OAAQ,YACRpC,MAAO,6CAET,CACEoC,OAAQ,mBACRpC,MAAO,qDAIb,CACEiC,MAAO,OACPC,SACE,sEACFC,QAAS,CACP,CACEC,OAAQ,UACRpC,MAAO,kBAET,CACEoC,OAAQ,iDACRpC,MAAO,gBAET,CACEoC,OAAQ,gBACRpC,MAAO,gBAET,CACEoC,OAAQ,mBACRpC,MAAO,gBAET,CACEoC,OAAQ,gBACRpC,MAAO,gBAET,CACEoC,OAAQ,eACRpC,MAAO,gBAET,CACEoC,OAAQ,kBACRpC,MAAO,gBAET,CACEoC,OAAQ,gCACRpC,MAAO,gBAET,CACEoC,OAAQ,eACRpC,MAAO,gBAET,CACEoC,OAAQ,aACRpC,MAAO,gBAET,CACEoC,OAAQ,6BACRpC,MAAO,gBAET,CACEoC,OAAQ,QACRpC,MAAO,gBAET,CACEoC,OAAQ,UACRpC,MAAO,gBAET,CACEoC,OAAQ,UACRpC,MAAO,gBAET,CACEoC,OAAQ,cACRpC,MAAO,kBAIb,CACEiC,MAAO,YACPC,SACE,kGACFC,QAAS,CACP,CACEC,OAAQ,UACRC,QAAS,QACTrC,MAAO,cAGT,CACEoC,OAAQ,YACRC,QAAS,QACTrC,MAAO,cAET,CACEoC,OAAQ,QACRC,QAAS,QACTrC,MAAO,cAET,CACEoC,OAAQ,SACRC,QAAS,SACTrC,MAAO,cAET,CACEoC,OAAQ,WACRC,QAAS,WACTrC,MAAO,cAET,CACEoC,OAAQ,UACRC,QAAS,YACTrC,MAAO,cAET,CACEoC,OAAQ,QACRC,QAAS,cACTrC,MAAO,aAET,CACEoC,OAAQ,QACRC,QAAS,QACTrC,MAAO,aAET,CACEoC,OAAQ,cACRC,QAAS,SACTrC,MAAO,aAET,CACEoC,OAAQ,SACRC,QAAS,iBACTrC,MAAO,aAET,CACEoC,OAAQ,QACRC,QAAS,aACTrC,MAAO,aAET,CACEoC,OAAQ,OACRC,QAAS,OACTrC,MAAO,aAET,CACEoC,OAAQ,SACRC,QAAS,OACTrC,MAAO,aAET,CACEoC,OAAQ,UACRC,QAAS,WACTrC,MAAO,aAET,CACEoC,OAAQ,QACRC,QAAS,UACTrC,MAAO,eAIb,CACEiC,MAAO,QACPC,SACE,gGAEFC,QAAS,CACP,CACEC,OAAQ,cACRpC,MAAO,qBAET,CACEoC,OAAQ,eACRpC,MAAO,qBAET,CACEoC,OAAQ,gBACRpC,MAAO,uBAET,CACEoC,OAAQ,SACRpC,MAAO,qBAET,CACEoC,OAAQ,eACRpC,MAAO,uBAET,CACEoC,OAAQ,aACRpC,MAAO,sBAET,CACEoC,OAAQ,kBACRpC,MAAO,oBAET,CACEoC,OAAQ,aACRpC,MAAO,oBAET,CACEoC,OAAQ,QACRpC,MAAO,oBAET,CACEoC,OAAQ,aACRpC,MAAO,oBAET,CACEoC,OAAQ,gBACRpC,MAAO,oBAET,CACEoC,OAAQ,mBACRpC,MAAO,sBAET,CACEoC,OAAQ,YACRpC,MAAO,sBAET,CACEoC,OAAQ,eACRpC,MAAO,sBAET,CACEoC,OAAQ,qBACRpC,MAAO,sBAET,CACEoC,OAAQ,oBACRpC,MAAO,sBAET,CACEoC,OAAQ,UACRpC,MAAO,sBAET,CACEoC,OAAQ,YACRpC,MAAO,oBAET,CACEoC,OAAQ,kBACRpC,MAAO,oBAGT,CACEoC,OAAQ,YACRpC,MAAO,wBAIb,CACEiC,MAAO,QACPC,SAAU,wDACVI,UAAW,gEACXH,QAAS,CACP,CACEC,OAAQ,SACRpC,MAAO,eAET,CACEoC,OAAQ,oBACRpC,MAAO,eAET,CACEoC,OAAQ,gBACRpC,MAAO,eAET,CACEoC,OAAQ,gBACRpC,MAAO,eAET,CACEoC,OAAQ,iBACRpC,MAAO,eAET,CACEoC,OAAQ,oBACRpC,MAAO,eAET,CACEoC,OAAQ,oBACRpC,MAAO,eAET,CACEoC,OAAQ,qBACRpC,MAAO,eAET,CACEoC,OAAQ,kBACRpC,MAAO,eAET,CACEoC,OAAQ,gBACRpC,MAAO,eAET,CACEoC,OAAQ,kBACRpC,MAAO,eAET,CACEoC,OAAQ,kBACRpC,MAAO,eAET,CACEoC,OAAQ,cACRpC,MAAO,eAET,CACEoC,OAAQ,WACRpC,MAAO,eAET,CACEoC,OAAQ,aACRpC,MAAO,iBAKb,CACEiC,MAAO,OACPC,SACE,iFACFC,QAAS,CACP,CACEC,OAAQ,OACRpC,MAAO,WAET,CACEoC,OAAQ,aACRpC,MAAO,WAET,CACEoC,OAAQ,gBACRpC,MAAO,WAET,CACEoC,OAAQ,MACRpC,MAAO,WAET,CACEoC,OAAQ,WACRpC,MAAO,WAET,CACEoC,OAAQ,OACRpC,MAAO,WAET,CACEoC,OAAQ,SACRpC,MAAO,WAET,CACEoC,OAAQ,MACRpC,MAAO,UAET,CACEoC,OAAQ,SACRpC,MAAO,UAGT,CACEoC,OAAQ,UACRpC,MAAO,UAET,CACEoC,OAAQ,UACRpC,MAAO,UAET,CACEoC,OAAQ,aACRpC,MAAO,UAET,CACEoC,OAAQ,QACRpC,MAAO,UAET,CACEoC,OAAQ,OACRpC,MAAO,UAGT,CACEoC,OAAQ,OACRpC,MAAO,YAIb,CACEiC,MAAO,cACPC,SAAU,iDACVC,QAAS,CACP,CACEC,OAAQ,SAEV,CACEA,OAAQ,YAEV,CACEA,OAAQ,cAEV,CACEA,OAAQ,YAEV,CACEA,OAAQ,YAEV,CACEA,OAAQ,UAEV,CACEA,OAAQ,mBAEV,CACEA,OAAQ,cAEV,CACEA,OAAQ,cAEV,CACEA,OAAQ,oBAEV,CACEA,OAAQ,YAEV,CACEA,OAAQ,WAEV,CACEA,OAAQ,cAEV,CACEA,OAAQ,QAEV,CACEA,OAAQ,WAKd,CACEH,MAAO,YACPC,SAAU,+DACVC,QAAS,CACP,CACEC,OAAQ,eACRpC,MAAO,OAET,CACEoC,OAAQ,0BACRpC,MAAO,UAET,CACEoC,OAAQ,aACRpC,MAAO,UAET,CACEoC,OAAQ,iBACRpC,MAAO,UAET,CACEoC,OAAQ,gBACRpC,MAAO,UAET,CACEoC,OAAQ,SACRpC,MAAO,UAET,CACEoC,OAAQ,0BACRpC,MAAO,UAET,CACEoC,OAAQ,gBACRpC,MAAO,UAET,CACEoC,OAAQ,UACRpC,MAAO,UAET,CACEoC,OAAQ,mBACRpC,MAAO,UAET,CACEoC,OAAQ,cACRpC,MAAO,WAET,CACEoC,OAAQ,UACRpC,MAAO,WAET,CACEoC,OAAQ,QACRpC,MAAO,WAET,CACEoC,OAAQ,aACRpC,MAAO,WAET,CACEoC,OAAQ,aACRpC,MAAO,c,mECtmBTuC,G,wDACJ,aAAe,IAAD,8BACZ,gBACKjC,MAAQ,CACXC,QAAS,GACTiC,aAAc,GACdC,0BAA2B,GAC3BC,OAAQ,GACRC,UAAWX,EACXY,aAAc,EACdC,QAAQ,EACRC,kBAAkB,EAClBC,cAAe,CACbrC,KAAM,GACNsC,MAAO,EACPC,OAAQ,GACRN,UAAW,GACXO,aAAc,KAGlB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,gBACrB,EAAKM,YAAc,EAAKA,YAAYN,KAAjB,gBACnB,EAAKO,UAAY,EAAKA,UAAUP,KAAf,gBACjB,EAAKQ,eAAiB,EAAKA,eAAeR,KAApB,gBA3BV,E,gEA6BO,IAAD,OACd7C,EAAUQ,KAAKb,MAAM2D,SAASvD,MAAMC,QACxCQ,KAAKlB,SACH,CACEU,QAASA,IAEX,kBAAM,EAAK4C,sB,sCAIE,IAAD,OACVW,EAAa,EAMjB,OALA/C,KAAKT,MAAMkC,aAAauB,SAAQ,SAAClC,GACsB,IAAjDA,EAAOqB,aAAa,EAAK5C,MAAMsC,eACjCkB,OAGGA,IAAe/C,KAAKT,MAAMkC,aAAawB,S,uCAG9B,IAAD,OACf,GAAIjD,KAAKT,MAAM2D,OAAQ,CACrB,IAAMA,EAASlD,KAAKT,MAAM2D,OACpBpC,EAASd,KAAKT,MAAM2D,OAAOpC,OAE7BqC,EAAmB,GAEA,UAAnBD,EAAOE,SACTtC,EAAOmB,MAAQnB,EAAOmB,MAAQ,GAC9BkB,EAAmB,MACnBrC,EAAOqB,aAAanC,KAAKT,MAAMsC,cAC7Bf,EAAOqB,aAAanC,KAAKT,MAAMsC,cAAgB,GACrB,YAAnBqB,EAAOE,UAChBtC,EAAOmB,MAAQnB,EAAOmB,MAAQiB,EAAOjB,MACrCkB,EAAmB,IAAMD,EAAOjB,OAGlCjC,KAAKT,MAAMoC,OAAO0B,MAElBrD,KAAKlB,SACH,CACEwE,YAAa,CACX3D,KAAMmB,EAAOnB,KACbV,MAAOkE,GAETD,OAAQA,EACRlB,cAAelB,IAEjB,WACE,EAAK2B,mB,sCAOX,GAAKzC,KAAKuD,gBA6BRvD,KAAKlB,SAAS,CACZgD,QAAQ,QA9Be,CASzB,IARA,IAAM0B,EAAoBxD,KAAKT,MAAMyC,cAAcrC,KAC/C8D,EAAezD,KAAKT,MAAMmC,0BAA0BgC,WACtD,SAAC5C,GAAD,OAAYA,EAAOnB,OAAS6D,KAG1BG,GAAa,EAEbC,GAAQ,GACJA,GACND,EACmB,IAAjBF,EACIzD,KAAKT,MAAMmC,0BAA0BuB,OAAS,EAC9CQ,EAAe,EAGnBzD,KAAKT,MAAMmC,0BAA0BiC,GAAWxB,aAC9CnC,KAAKT,MAAMsC,cACT,IAEJ+B,GAAQ,GAEVH,EAAeE,EAGjB3D,KAAKlB,SAAS,CACZkD,cAAehC,KAAKT,MAAMmC,0BAA0BiC,Q,oCAS3C,IAAD,OACZ3D,KAAKlB,SACH,CACEiD,kBAAkB,EAClBV,YAAQwC,IAEV,kBAAM,EAAKC,mB,kCAIF,IAAD,OACV9D,KAAKT,MAAMkC,aAAauB,SAAQ,SAAClC,GAC/BA,EAAOqB,aAAa9C,KAAK,MAE3BW,KAAKlB,SACH,CACE+C,aAAc7B,KAAKT,MAAMsC,aAAe,EACxCE,kBAAkB,EAClBuB,iBAAaO,EACb/B,QAAQ,EACRH,OAAQ,GACRD,0BAA0B,YAAK1B,KAAKT,MAAMkC,cAC1CO,cAAehC,KAAKT,MAAMkC,aACxBzB,KAAKT,MAAMkC,aAAawB,OAAS,KAGrC,kBAAM,EAAKa,mB,mCAIFZ,GAAS,IAAD,OACnB,GAAuB,SAAnBA,EAAOE,QAAoB,CAC7B,IAAID,EAAmB,GACA,YAAnBD,EAAOE,SACTpD,KAAKT,MAAMyC,cAAcC,OAASiB,EAAOjB,MACzCkB,EAAmB,IAAMD,EAAOjB,OACJ,UAAnBiB,EAAOE,UAChBpD,KAAKlB,SAAS,CACZ6C,OAAQ3B,KAAKT,MAAMoC,OAAOoC,OAAOb,KAEnClD,KAAKT,MAAMyC,cAAcC,OAAS,GAClCkB,EAAmB,MAEjBnD,KAAKT,MAAMyC,cAAcG,cACzBnC,KAAKT,MAAMyC,cAAcG,aAAanC,KAAKT,MAAMsC,cAEjD7B,KAAKT,MAAMyC,cAAcG,aAAanC,KAAKT,MAAMsC,gBAEjD7B,KAAKT,MAAMyC,cAAcG,aAAanC,KAAKT,MAAMsC,cAAgB,GAGrE7B,KAAKlB,SACH,CACEwE,YAAa,CACX3D,KAAMK,KAAKT,MAAMyC,cAAcrC,KAC/BV,MAAOkE,GAETD,OAAQA,IAEV,WACE,EAAKR,gBACL,EAAKD,gBAIXuB,QAAQC,IAAI,0B,mCAGA,IAAD,OACLC,EAAY,YAAOlE,KAAKT,MAAMkC,cACpCyC,EAAaC,MAAK,SAACC,EAASC,GAAV,OAAsBA,EAAQpC,MAAQmC,EAAQnC,SAChEjC,KAAKlB,SACH,CACE2C,aAAcyC,IAEhB,WACE,EAAKJ,mB,gCAKD/C,GACR,MAAO,CAAC,MAAO,OAAQ,QAAS,SAAU,UAAUA,K,uCAGpC,IAAD,OACXU,EAAe,GACnBzB,KAAKT,MAAMC,QAAQwD,SAAQ,SAAClC,EAAQC,GAClCU,EAAapC,KAAK,CAChBM,KAAMmB,EACNmB,MAAO,EACPC,OAAQ,EAAKK,UAAUxB,GACvBoB,aAAc,CAAC,QAGnBnC,KAAKlB,SACH,CACE2C,aAAcA,EACdO,cAAeP,EAAaA,EAAawB,OAAS,KAEpD,WACE,EAAKX,sB,uCAWT,IANgB,IAGdgC,EACAC,EAJa,OACXC,EAAkBxE,KAAKT,MAAMkC,aAC/BgC,EAAezD,KAAKT,MAAMkC,aAAawB,OAIlC,IAAMQ,GACXc,EAAcE,KAAKC,MAAMD,KAAKE,SAAWlB,GAGzCa,EAAiBE,EAFjBf,GAAgB,GAGhBe,EAAgBf,GAAgBe,EAAgBD,GAChDC,EAAgBD,GAAeD,EAEjCtE,KAAKlB,SACH,CACE2C,aAAc+C,EACd9C,0BAA2B8C,IAE7B,kBAAM,EAAKV,mB,+BAKb,IAAMc,EACJ5E,KAAKT,MAAMsC,eAAiB7B,KAAKT,MAAMqC,UAAUqB,OAC/C,6BACE,kBAAC4B,EAAD,CAAapD,aAAczB,KAAKT,MAAMkC,gBAGxC,kBAAC,IAAMqD,SAAP,KACE,qCACS9E,KAAKT,MAAMsC,aAAe,EADnC,IACuC7B,KAAKT,MAAMqC,UAAUqB,QAE5D,kBAAC,EAAD,CACE9B,SAAUnB,KAAKT,MAAMqC,UAAU5B,KAAKT,MAAMsC,cAC1CA,aAAc7B,KAAKT,MAAMsC,aACzBJ,aAAczB,KAAKT,MAAMkC,aACzBe,aAAcxC,KAAKwC,aACnBR,cAAehC,KAAKT,MAAMyC,cAC1BF,OAAQ9B,KAAKT,MAAMuC,OACnBC,iBAAkB/B,KAAKT,MAAMwC,oBAIrC,OACE,6BACE,yBAAKnC,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACE6B,aAAczB,KAAKT,MAAMkC,aACzBO,cAAehC,KAAKT,MAAMyC,cAC1BsB,YAAatD,KAAKT,MAAM+D,cAG1B,kBAACyB,EAAD,CACEpC,YAAa3C,KAAK2C,YAClBZ,iBAAkB/B,KAAKT,MAAMwC,iBAC7Ba,UAAW5C,KAAK4C,UAChBjB,OAAQ3B,KAAKT,MAAMoC,OACnBkB,eAAgB7C,KAAK6C,kBAIzB,yBAAKjD,UAAU,UAAUgF,S,GAnShBlE,cA0SnB,SAASqE,EAAS5F,GAChB,IAAI6F,EAAU,GAEZA,EADE7F,EAAM4C,iBAEN,4BACElC,MAAO,CACLO,MAAO,QACPC,aAAc,MACdC,cAAe,QACfC,UAAW,QAEbC,QAAS,kBAAMrB,EAAMyD,aACrBhD,UAAU,mEARZ,cAeA,6BACE,6BACE,4BACEC,MAAO,CACLO,MAAO,QACPC,aAAc,MACdC,cAAe,QACfC,UAAW,QAEbC,QAAS,kBAAMrB,EAAM0D,kBACrBjD,UAAU,kEARZ,SAaF,6BACE,4BACEC,MAAO,CACLO,MAAO,QACPC,aAAc,MACdC,cAAe,QACfC,UAAW,QAEbC,QAAS,kBAAMyE,KACfrF,UAAU,iEARZ,eAiBR,IAAMqF,EAAW,WACfC,uBAAa,CACXC,MAAO,aACPC,QAAS,+BACTJ,QAAS,CACP,CACEK,MAAO,MACP7E,QAAS,kBAAMrB,EAAMwD,gBAEvB,CACE0C,MAAO,SACP7E,QAAS,kBAAMwD,QAAQC,IAAI,kBAM7BqB,EAAanG,EAAMwC,OAAOd,KAAI,SAAC0E,EAAMxE,GAAP,OAClC,yBAAKC,IAAKD,GACPwE,EAAKzE,OAAOnB,KADf,KACuB4F,EAAKC,UAI9B,OACE,6BACE,yBACE3F,MAAO,CACLU,UAAW,OACXkF,OAAQ,UAGV,sCACCH,GAEH,yBACEzF,MAAO,CACLU,UAAW,UAGZyE,IAMT,SAASH,EAAY1F,GACnB,IAAMyB,EAAYzB,EAAMsC,aAAaZ,KAAI,SAACC,EAAQC,GAAT,OACvC,yBAAKC,IAAKF,EAAOnB,KAAMC,UAAU,OAC/B,yBACEA,UAAW8F,IAAW,CACpB,UAAU,IAEZ7F,MAAO,CACL8F,UAAW,OACXC,gBAAiB9E,EAAOoB,UAI5B,yBACEtC,UAAU,SACVC,MAAO,CACLgG,OAAQ,SAGT/E,EAAOnB,MAGV,yBACEC,UAAU,SACVC,MAAO,CACLgG,OAAQ,SAGT/E,EAAOmB,WAId,OACE,kBAAC,IAAM6C,SAAP,KACE,4CACA,yBACEjF,MAAO,CACLiG,WAAY,OACZvF,UAAW,SAGb,kBAAC,IAAD,CAAUwF,SAAS,QAAQnF,K,IAM7BoF,E,uKACM,IAAD,OACDpF,EAAYZ,KAAKb,MAAMsC,aAAaZ,KAAI,SAACC,EAAQC,GAAT,OAC5C,yBAAKC,IAAKF,EAAOnB,KAAMC,UAAU,OAC/B,yBACEA,UAAW8F,IAAW,CACpB,UAAU,IAEZ7F,MAAO,CACL8F,UAAW,OACXC,gBAAiB9E,EAAOoB,UAI5B,yBACEtC,UAAU,SACVC,MAAO,CACLgG,OAAQ,SAGT/E,EAAOnB,MAGV,yBACEC,UAAU,SACVC,MAAO,CACLgG,OAAQ,SAGT/E,EAAOmB,OAEV,yBACErC,UAAU,SACVC,MAAO,CACLgG,OAAQ,SAGV,0BACEhG,MAAO,CACLoG,MACE,EAAK9G,MAAMmE,aACX,EAAKnE,MAAMmE,YAAYrE,MAAMiH,SAAS,KAClC,YACA,OAERtG,UAAW8F,IAAW,CACpBS,MACE,EAAKhH,MAAMmE,aACX,EAAKnE,MAAMmE,YAAYrE,OACvB,EAAKE,MAAMmE,YAAY3D,OAASmB,EAAOnB,QAG1C,EAAKR,MAAMmE,aACV,EAAKnE,MAAMmE,YAAY3D,OAASmB,EAAOnB,MACvC,EAAKR,MAAMmE,YAAYrE,YAKjC,OACE,kBAAC,IAAM6F,SAAP,KACE,2CACA,yBACEjF,MAAO,CACLiG,WAAY,OACZvF,UAAW,SAGb,kBAAC,IAAD,CAAUwF,SAAS,QAAQnF,S,GApEXF,aA2EpB0F,E,kDACJ,aAAe,IAAD,8BACZ,gBAsGFxH,SAAW,SAACC,GACV,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SAtGxC,EAAKM,MAAQ,CACXiG,MAAO,IAGT,EAAKtG,SAAW,EAAKA,SAASmD,KAAd,gBAChB,EAAKgE,UAAY,EAAKA,UAAUhE,KAAf,gBACjB,EAAKiE,UAAY,EAAKA,UAAUjE,KAAf,gBARL,E,sEAWYkE,GAAW,IAAD,OAC9BA,EAASpF,UACXnB,KAAKlB,SACH,CACEqC,SAAUoF,EAASpF,WAErB,kBAAM,EAAK2C,iBAGXyC,EAAS1E,eAAiB7B,KAAKb,MAAM0C,cACvC7B,KAAKlB,SACH,CACEuC,YAAQwC,IAEV,kBAAM,EAAKC,mB,gCAaP0C,GACRA,EAAMC,S,+BAGC5H,GAAI,IAAD,OAEV,GADAA,EAAEa,iBACEM,KAAKT,MAAMiG,MAAMkB,OAAQ,CAC3B,IAAMxD,EAASlD,KAAKsG,UAAUtG,KAAKT,MAAMiG,OAEzC,GAAuB,UAAnBtC,EAAOE,QAAqB,CAC9B,IAAMuD,EAAa,IAAIC,MAAMC,KAC7B7G,KAAKqG,UAAUM,GACf3G,KAAKlB,SAAS,CACZ0G,MAAO,UAEJ,GAAuB,SAAnBtC,EAAOE,QAChBpD,KAAKlB,SAAS,CACZ0G,MAAO,UAEJ,GAAuB,YAAnBtC,EAAOE,QAAuB,CACvC,IAAM0D,EAAe,IAAIF,MAAMG,KAC/B/G,KAAKqG,UAAUS,GACf9G,KAAKlB,SACH,CACEuC,OAAQ6B,EAAO7B,OACfmE,MAAO,KAET,kBAAM,EAAK1B,iBAIf9D,KAAKb,MAAMqD,aAAaU,GAE1Bc,QAAQC,IAAI,sB,gCAGJuB,GACR,IAAMnE,EAASrB,KAAKT,MAAM4B,SAASC,QAAQ4F,MAAK,SAAC3F,GAAD,OAC9CA,EAAOA,OAAO4F,cAAcf,SAASV,EAAMyB,kBAGzC/D,EAAS,GAEb,GAAI7B,IAAWA,EAAO6F,eAAe,QAAS,CAC5C7F,EAAO8F,MAAO,EACd,IAAM1G,EAAWT,KAAKT,MAAM4B,SAASC,QAAQgG,QAAQ/F,GAErD6B,EAAOE,QAAU,UACjBF,EAAOjB,MAAQjC,KAAKT,MAAM4B,SAASC,QAAQ6B,OAASxC,EAEpDY,EAAOP,OAASd,KAAKb,MAAM6C,cAC3BX,EAAOZ,SAAWA,EAClByC,EAAOpC,OAASd,KAAKb,MAAM6C,cAE3BkB,EAAO7B,OAASgG,KAAKC,MAAMD,KAAKE,UAAUlG,SACjCA,GAAUA,EAAO6F,eAAe,QACzChE,EAAOE,QAAU,QAEjBF,EAAOE,QAAU,QACjBF,EAAOpC,OAASd,KAAKb,MAAM6C,cAC3BkB,EAAOsC,MAAQA,GAEjB,OAAOtC,I,+BAQP,IAAM/B,EAAWnB,KAAKb,MAAMgC,SAQtBqG,GANwBxH,KAAKb,MAAM2C,QAGhC9B,KAAKb,MAAM6C,cAAcrC,KAGNK,KAAKb,MAAM2C,OACrC,0BAAMjC,MAAO,CAAEoG,MAAO,QAAtB,WAEA,4BACEpG,MAAO,CACLO,MAAO,QACPC,aAAc,MACdC,cAAe,QACfC,UAAW,QAEbL,KAAK,SACLN,UACE,oDACAI,KAAKb,MAAM6C,cAAcE,OACzB,aAGDlC,KAAKb,MAAM6C,cAAcrC,OAI9B,OACE,yBAAKE,MAAO,CAAE4F,OAAQ,WACpB,6BACE,kBAAC,IAAD,CAAUM,SAAS,QACjB,yBAAK/E,IAAKG,EAASD,OACjB,4BAAKC,EAASD,QAEhB,yBAAKF,IAAKG,EAASA,UACjB,4BAAKA,EAASA,WAEhB,yBAAKH,IAAKG,EAASI,WACjB,4BAAKJ,EAASI,cAKpB,yBAAK1B,MAAO,CAAEU,UAAW,SACvB,yBAAKX,UAAU,OACb,yBAAKA,UAAU,UAAUC,MAAO,CAAEU,UAAW,SAC3C,0BAAMR,YAAU,EAACb,SAAUc,KAAKd,UAC9B,yBAAKU,UAAU,sBACb,2BACEhB,SAAUoB,KAAKpB,SACfK,MAAOe,KAAKT,MAAMiG,MAClBxG,GAAG,QACHkB,KAAK,SAEP,2BAAOC,QAAQ,SAAf,UAEF,yBAAKP,UAAU,UAAU4H,MAI/B,yBAAK3H,MAAO,CAAEU,UAAW,OAAQkH,WAAY,WAC3C,kBAAC,EAAD,CACEC,WAAY1H,KAAKb,MAAMgC,SAASC,QAAQ6B,OACxC0E,gBAAiB3H,KAAKT,MAAM8B,OAC5BU,iBAAkB/B,KAAKb,MAAM4C,iBAC7BZ,SAAUnB,KAAKb,MAAMgC,kB,GAhLfT,aAyLdkH,E,kDACJ,aAAe,IAAD,8BACZ,gBACKrI,MAAQ,CACX6B,QAAS,IAHC,E,gEAUZ,IAFA,IAAMsG,EAAa1H,KAAKb,MAAMuI,WACxBG,EAAa,GACV9G,EAAI,EAAGA,EAAI2G,EAAY3G,IAC9B8G,EAAWxI,KAAK,IAElBW,KAAKlB,SAAS,CACZsC,QAASyG,M,gDAIatB,GAAW,IAAD,OAClC,GAAIA,EAASpF,SAASA,WAAanB,KAAKb,MAAMgC,SAASA,SAAU,CAG/D,IAFA,IAAMuG,EAAanB,EAASmB,WACtBG,EAAa,GACV9G,EAAI,EAAGA,EAAI2G,EAAY3G,IAC9B8G,EAAWxI,KAAK,IAElBW,KAAKlB,SACH,CACEsC,QAASyG,IAEX,kBAAM,EAAK/D,iBAGf,GAAIyC,EAASoB,gBAAiB,CAC5B,IAAMtG,EAASkF,EAASoB,gBAClBE,EAAa7H,KAAKT,MAAM6B,QAC9ByG,EAAWxG,EAAOZ,UAAYY,EAC9BrB,KAAKlB,SAAS,CACZsC,QAASyG,IAGb,GAAItB,EAASxE,iBAAkB,CAC7B,IAAI8F,EAAa,GACjB7H,KAAKT,MAAM6B,QAAQ4B,SAAQ,SAAC3B,EAAQN,GAClC,GAAKM,EAAOP,OAUV+G,EAAWxI,KAAKgC,OAVE,CAClB,IAAIyG,EAAkB,EAAK3I,MAAMgC,SAASC,QAAQL,GAClD+G,EAAgBX,MAAO,EAKvBW,EAAgBhH,OAJH,CACXnB,KAAM,OACNuC,OAAQ,WAGV2F,EAAWxI,KAAKyI,GAIlB,EAAKhJ,SACH,CACEsC,QAASyG,IAEX,kBAAM,EAAK/D,uB,+BAMT,IAAD,OACDiE,EAAe,GAQrB,OANA/H,KAAKT,MAAM6B,QAAQ4B,SAAQ,SAAC3B,EAAQN,GAClCgH,EAAa1I,KACX,kBAAC,EAAD,CAAa2B,IAAKD,EAAI,EAAK5B,MAAMgC,SAASA,SAAUE,OAAQA,QAK9D,6BACE,kBAAC,IAAD,CAAU0E,SAAS,QAAQgC,Q,GA7ERrH,aAmFrBsH,E,kDACJ,aAAe,IAAD,8BACZ,gBACKzI,MAAQ,CACX0I,WAAY,KAHF,E,qDAQZ,IAAM5G,EAASrB,KAAKb,MAAMkC,OACtB6G,EAAO,GACPC,EAAmB,UAUvB,OATI9G,GAAUA,EAAOP,SACfO,EAAO6F,eAAe,YACxBgB,GAAc7G,EAAOA,OACjBA,EAAO6F,eAAe,WACxBgB,EAAOA,EAAO,KAAO7G,EAAOpC,QAGhCkJ,EAAmB9G,EAAOP,OAAOoB,QAAU,WAG3C,kBAAC,IAAM4C,SAAP,KACE,yBACElF,UAAU,MACVC,MAAO,CACLU,UAAW,MACX6H,aAAc,QAGhB,yBACExI,UAAU,SACVC,MAAO,CACLwI,UAAW,SACXD,aAAc,MACdzC,UAAW,OACX2C,OAAQ,iBACRC,gBACE,6BACAJ,EACA,WACAA,EACA,MAGJ,uBAAGD,MAAI,GAAP,IAAUA,EAAV,Y,GA7CcxH,aAqDXc,IC/zBAgH,MAXf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,gBAChB,yBAAK9I,UAAU,OACb,kBAAC,IAAD,CAAO+I,KAAMD,gBAA8BE,UAAWjK,IACtD,kBAAC,IAAD,CAAOgK,KAAMD,oBAAkCE,UAAWpH,OCC9CqH,QACW,cAA7BC,OAAOhG,SAASiG,UAEe,UAA7BD,OAAOhG,SAASiG,UAEhBD,OAAOhG,SAASiG,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7F,QAAQ6F,MAAMA,EAAMzE,c","file":"static/js/main.39987b02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/14876504_correct_by_robotsound_preview.b739fd31.mp3\";","module.exports = __webpack_public_path__ + \"static/media/23205030_game-show-buzzer-wrong-answer_by_floraphonic_preview.66615ba4.mp3\";","import React, { Component } from \"react\";\nimport \"../css/quiz.css\";\n\nclass AddPlayers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      players: [],\n    };\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = (e) => {\n    this.props.history.push({\n      pathname: \"/game\",\n      state: { players: this.state.players },\n    });\n  };\n  onAdd = (e) => {\n    e.preventDefault();\n    this.state.players.push(this.state.name);\n    this.setState({ players: this.state.players, name: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s4 offset-s4\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Add players</b> below\n              </h4>\n            </div>\n          </div>\n        </div>\n        <div className=\"row inner-div\">\n          <div className=\"col s4 offset-s4\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <div class=\"row\">\n                <div className=\"input-field col s8\">\n                  <input\n                    onChange={this.onChange}\n                    value={this.state.name}\n                    id=\"name\"\n                    type=\"text\"\n                  />\n                  <label htmlFor=\"name\">Name</label>\n                </div>\n                <div className=\"col s4\">\n                  <button\n                    style={{\n                      width: \"150px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\",\n                      marginTop: \"1rem\",\n                    }}\n                    onClick={this.onAdd}\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  >\n                    Add\n                  </button>\n                </div>\n              </div>\n\n              <div\n                className=\"col s12 offset-s4\"\n                style={{ paddingLeft: \"11.250px\" }}\n              >\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable green accent-3\"\n                >\n                  Start game\n                </button>\n              </div>\n            </form>\n            <div className=\"col s12\">\n              <div style={{ position: \"absolute\" }}>\n                <PlayerList players={this.state.players} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass PlayerList extends Component {\n  render() {\n    const listItems = this.props.players.map((player, i) => (\n      <li key={i}>{player}</li>\n    ));\n\n    return (\n      <div>\n        <h5>Players</h5>\n        <ul>{listItems}</ul>\n      </div>\n    );\n  }\n}\n\nexport default AddPlayers;\n","export const SET1 = [\n  {\n    theme: \"Politics\",\n    question:\n      \"Last 20 American Presidents from 1901 to present day, earliest to recent\",\n    answers: [\n      {\n        answer: \"Theodore Roosevelt\",\n        value: \"1901 - 1909\",\n      },\n      {\n        answer: \"William Howard Taft\",\n        value: \"1909 - 1913\",\n      },\n      {\n        answer: \"Woodrow Wilson\",\n        value: \"1913 - 1921\",\n      },\n      {\n        answer: \"Warren G. Harding\",\n        value: \"1921 - 1923\",\n      },\n      {\n        answer: \"Calvin Coolidge\",\n        value: \"1923 - 1929\",\n      },\n      {\n        answer: \"Herbert Hoover\",\n        value: \"1929 - 1933\",\n      },\n      {\n        answer: \"Franklin D. Roosevelt\",\n        value: \"1933 - 1945\",\n      },\n      {\n        answer: \"Harry S. Truman\",\n        value: \"1945 - 1953\",\n      },\n      {\n        answer: \"Dwight D. Eisenhower\",\n        value: \"1953 - 1961\",\n      },\n      {\n        answer: \"John F. Kennedy\",\n        value: \"1961 - 1963\",\n      },\n      {\n        answer: \"Lyndon B. Johnson\",\n        value: \"1963 - 1969\",\n      },\n      {\n        answer: \"Richard Nixon\",\n        value: \"1969 - 1974\",\n      },\n      {\n        answer: \"Gerald Ford\",\n        value: \"1974 - 1977\",\n      },\n      {\n        answer: \"Jimmy Carter\",\n        value: \"1977 - 1981\",\n      },\n      {\n        answer: \"Ronald Reagan\",\n        value: \"1981 - 1989\",\n      },\n      {\n        answer: \"George H. W. Bush\",\n        value: \"1989 - 1993\",\n      },\n      {\n        answer: \"Bill Clinton\",\n        value: \"1993 - 2001\",\n      },\n      {\n        answer: \"George W. Bush\",\n        value: \"2001 - 2009\",\n      },\n      {\n        answer: \"Barack Obama\",\n        value: \"2009 - 2017\",\n      },\n      {\n        answer: \"Donald Trump\",\n        value: \"2017 - \",\n      },\n    ],\n  },\n  {\n    theme: \"Sport\",\n    question: \"Top 10 Longest serving English Premier league managers\",\n    answers: [\n      {\n        answer: \"Arsene Wenger\",\n        value: \"Arsenal | October 1996 - May 2018\",\n      },\n      {\n        answer: \"Sir Alex Ferguson\",\n        value: \"Man United | August 1992 - May 2013\",\n      },\n      {\n        answer: \"David Moyes\",\n        value: \"Everton | March 2002 - May 2013\",\n      },\n      {\n        answer: \"Harry Redknapp\",\n        value: \"West Ham United | August 1994 - May 2001\",\n      },\n      {\n        answer: \"Rafael Benitez\",\n        value: \"Liverpool | August 2004 - June 2010\",\n      },\n      {\n        answer: \"Alan Curbishley\",\n        value: \"Charlton Athletic | August 2000 - May 2006\",\n      },\n      {\n        answer: \"Sam Allardyce\",\n        value: \"Bolton Wanderers | August 2001 - April 2007\",\n      },\n      {\n        answer: \"Gerard Houllier\",\n        value: \"Liverpool | November 1998 - May 2004\",\n      },\n      {\n        answer: \"Jim Smith\",\n        value: \"Derby County | August 1996 - October 2001\",\n      },\n      {\n        answer: \"Sir Bobby Robson\",\n        value: \"Newcastle United | September 1999 - August 2004\",\n      },\n    ],\n  },\n  {\n    theme: \"Film\",\n    question:\n      \"Top 15 highest grossing films of the 90s (worldwide and unadjusted)\",\n    answers: [\n      {\n        answer: \"Titanic\",\n        value: \"$1,843,201,268\",\n      },\n      {\n        answer: \"Star Wars: Episode I – The Phantom Menace\",\n        value: \"$924,317,558\",\n      },\n      {\n        answer: \"Jurassic Park\",\n        value: \"$914,691,118\",\n      },\n      {\n        answer: \"Independence Day\",\n        value: \"$817,400,891\",\n      },\n      {\n        answer: \"The Lion King\",\n        value: \"$763,455,561\",\n      },\n      {\n        answer: \"Forrest Gump\",\n        value: \"$677,387,716\",\n      },\n      {\n        answer: \"The Sixth Sense\",\n        value: \"$672,806,292\",\n      },\n      {\n        answer: \"The Lost World: Jurassic Park\",\n        value: \"$618,638,999\",\n      },\n      {\n        answer: \"Men in Black\",\n        value: \"$589,390,539\",\n      },\n      {\n        answer: \"Armageddon\",\n        value: \"$553,709,788\",\n      },\n      {\n        answer: \"Terminator 2: Judgment Day\",\n        value: \"$519,843,345\",\n      },\n      {\n        answer: \"Ghost\",\n        value: \"$505,702,588\",\n      },\n      {\n        answer: \"Aladdin\",\n        value: \"$504,050,219\",\n      },\n      {\n        answer: \"Twister\",\n        value: \"$494,471,524\",\n      },\n      {\n        answer: \"Toy Story 2\",\n        value: \"$485,015,179\",\n      },\n    ],\n  },\n  {\n    theme: \"Geography\",\n    question:\n      \"Top 15 capital city populations by official capital area, not wider metropolitan/urban district\",\n    answers: [\n      {\n        answer: \"Beijing\",\n        answer2: \"China\",\n        value: \"21,542,000\",\n      },\n\n      {\n        answer: \"New Delhi\",\n        answer2: \"India\",\n        value: \"14,200,004\",\n      },\n      {\n        answer: \"Tokyo\",\n        answer2: \"Japan\",\n        value: \"13,929,286\",\n      },\n      {\n        answer: \"Moscow\",\n        answer2: \"Russia\",\n        value: \"12,506,468\",\n      },\n      {\n        answer: \"Kinshasa\",\n        answer2: \"DR Congo\",\n        value: \"11,855,000\",\n      },\n      {\n        answer: \"Jakarta\",\n        answer2: \"Indonesia\",\n        value: \"10,075,310\",\n      },\n      {\n        answer: \"Seoul\",\n        answer2: \"South Korea\",\n        value: \"9,838,892\",\n      },\n      {\n        answer: \"Cairo\",\n        answer2: \"Egypt\",\n        value: \"9,500,000\",\n      },\n      {\n        answer: \"Mexico City\",\n        answer2: \"Mexico\",\n        value: \"8,918,653\",\n      },\n      {\n        answer: \"London\",\n        answer2: \"United Kingdom\",\n        value: \"8,908,081\",\n      },\n      {\n        answer: \"Dhaka\",\n        answer2: \"Bangladesh\",\n        value: \"8,906,039\",\n      },\n      {\n        answer: \"Lima\",\n        answer2: \"Peru\",\n        value: \"8,852,000\",\n      },\n      {\n        answer: \"Tehran\",\n        answer2: \"Iran\",\n        value: \"8,693,706\",\n      },\n      {\n        answer: \"Bangkok\",\n        answer2: \"Thailand\",\n        value: \"8,305,218\",\n      },\n      {\n        answer: \"Hanoi\",\n        answer2: \"Vietnam\",\n        value: \"7,781,631\",\n      },\n    ],\n  },\n  {\n    theme: \"Music\",\n    question:\n      \"Top 20 best selling artists by total certified album units sold in the US including streaming\",\n\n    answers: [\n      {\n        answer: \"The Beatles\",\n        value: \"183 million units\",\n      },\n      {\n        answer: \"Garth Brooks\",\n        value: \"156 million units\",\n      },\n      {\n        answer: \"Elvis Presley\",\n        value: \"146.5 million units\",\n      },\n      {\n        answer: \"Eagles\",\n        value: \"120 million units\",\n      },\n      {\n        answer: \"Led Zeppelin\",\n        value: \"111.5 million units\",\n      },\n      {\n        answer: \"Billy Joel\",\n        value: \"84.5 million units\",\n      },\n      {\n        answer: \"Michael Jackson\",\n        value: \"84 million units\",\n      },\n      {\n        answer: \"Elton John\",\n        value: \"79 million units\",\n      },\n      {\n        answer: \"AC DC\",\n        value: \"75 million units\",\n      },\n      {\n        answer: \"Pink Floyd\",\n        value: \"75 million units\",\n      },\n      {\n        answer: \"George Strait\",\n        value: \"69 million units\",\n      },\n      {\n        answer: \"Barbra Streisand\",\n        value: \"68.5 million units\",\n      },\n      {\n        answer: \"Aerosmith\",\n        value: \"66.5 million units\",\n      },\n      {\n        answer: \"Mariah Carey\",\n        value: \"66.5 million units\",\n      },\n      {\n        answer: \"The Rolling Stones\",\n        value: \"66.5 million units\",\n      },\n      {\n        answer: \"Bruce Springsteen\",\n        value: \"65.5 million units\",\n      },\n      {\n        answer: \"Madonna\",\n        value: \"64.5 million units\",\n      },\n      {\n        answer: \"Metallica\",\n        value: \"63 million units\",\n      },\n      {\n        answer: \"Whitney Houston\",\n        value: \"59 million units\",\n      },\n\n      {\n        answer: \"Van Halen\",\n        value: \"56.5 million units\",\n      },\n    ],\n  },\n  {\n    theme: \"Sport\",\n    question: \"Top 15 footballers by total accumulated transfer fees\",\n    condition: \"Highest to lowest - more points for higher total transfer fee\",\n    answers: [\n      {\n        answer: \"Neymar\",\n        value: \"£279.18m\",\n      },\n      {\n        answer: \"Cristiano Ronaldo\",\n        value: \"£207.00m\",\n      },\n      {\n        answer: \"Romelu Lukaku\",\n        value: \"£183.20m\",\n      },\n      {\n        answer: \"Alvaro Morata\",\n        value: \"£161.10m\",\n      },\n      {\n        answer: \"Angel Di Maria\",\n        value: \"£161.10m\",\n      },\n      {\n        answer: \"Antoine Griezmann\",\n        value: \"£156.60m\",\n      },\n      {\n        answer: \"Philippe Coutinho\",\n        value: \"£153.27m\",\n      },\n      {\n        answer: \"Zlatan Ibrahimovic\",\n        value: \"£152.19m\",\n      },\n      {\n        answer: \"Gonzalo Higuain\",\n        value: \"£143.10m\",\n      },\n      {\n        answer: \"Kylian Mbappe\",\n        value: \"£130.50m\",\n      },\n      {\n        answer: \"James Rodriguez\",\n        value: \"£126.57m\",\n      },\n      {\n        answer: \"Ousmane Dembele\",\n        value: \"£126.00m\",\n      },\n      {\n        answer: \"Eden Hazard\",\n        value: \"£121.50m\",\n      },\n      {\n        answer: \"Paulinho\",\n        value: \"£114.17m\",\n      },\n      {\n        answer: \"Joao Felix\",\n        value: \"£113.40m\",\n      },\n    ],\n  },\n\n  {\n    theme: \"Cars\",\n    question:\n      \"Top 15 car marques by total new passenger vehicle registrations in the UK 2019\",\n    answers: [\n      {\n        answer: \"Ford\",\n        value: \"236,137\",\n      },\n      {\n        answer: \"Volkswagen\",\n        value: \"200,771\",\n      },\n      {\n        answer: \"Mercedes-Benz\",\n        value: \"171,823\",\n      },\n      {\n        answer: \"BMW\",\n        value: \"169,753\",\n      },\n      {\n        answer: \"Vauxhall\",\n        value: \"159,830\",\n      },\n      {\n        answer: \"Audi\",\n        value: \"138,924\",\n      },\n      {\n        answer: \"Toyota\",\n        value: \"105,192\",\n      },\n      {\n        answer: \"Kia\",\n        value: \"97,323\",\n      },\n      {\n        answer: \"Nissan\",\n        value: \"92,372\",\n      },\n\n      {\n        answer: \"Hyundai\",\n        value: \"83,284\",\n      },\n      {\n        answer: \"Peugeot\",\n        value: \"80,851\",\n      },\n      {\n        answer: \"Land Rover\",\n        value: \"76,546\",\n      },\n      {\n        answer: \"Skoda\",\n        value: \"75,053\",\n      },\n      {\n        answer: \"SEAT\",\n        value: \"68,798\",\n      },\n\n      {\n        answer: \"MINI\",\n        value: \"64,884\",\n      },\n    ],\n  },\n  {\n    theme: \"Board games\",\n    question: \"Top 15 highest selling board games of all time\",\n    answers: [\n      {\n        answer: \"Chess\",\n      },\n      {\n        answer: \"Draughts\",\n      },\n      {\n        answer: \"Backgammon\",\n      },\n      {\n        answer: \"Monopoly\",\n      },\n      {\n        answer: \"Scrabble\",\n      },\n      {\n        answer: \"Cluedo\",\n      },\n      {\n        answer: \"Trivial pursuit\",\n      },\n      {\n        answer: \"Battleship\",\n      },\n      {\n        answer: \"Candy land\",\n      },\n      {\n        answer: \"The Game of Life\",\n      },\n      {\n        answer: \"Rummikub\",\n      },\n      {\n        answer: \"Othello\",\n      },\n      {\n        answer: \"Pictionary\",\n      },\n      {\n        answer: \"Risk\",\n      },\n      {\n        answer: \"Catan\",\n      },\n    ],\n  },\n\n  {\n    theme: \"Geography\",\n    question: \"Top 15 smallest European countries/territories by population\",\n    answers: [\n      {\n        answer: \"Vatican City\",\n        value: \"799\",\n      },\n      {\n        answer: \"Aland Islands (Finland)\",\n        value: \"29,489\",\n      },\n      {\n        answer: \"San Marino\",\n        value: \"33,407\",\n      },\n      {\n        answer: \"Gibraltar (UK)\",\n        value: \"33,573\",\n      },\n      {\n        answer: \"Liechtenstein\",\n        value: \"38,201\",\n      },\n      {\n        answer: \"Monaco\",\n        value: \"38,300\",\n      },\n      {\n        answer: \"Faroe Islands (Denmark)\",\n        value: \"51,237\",\n      },\n      {\n        answer: \"Guernsey (UK)\",\n        value: \"62,063\",\n      },\n      {\n        answer: \"Andorra\",\n        value: \"74,794\",\n      },\n      {\n        answer: \"Isle of Man (UK)\",\n        value: \"83,314\",\n      },\n      {\n        answer: \"Jersey (UK)\",\n        value: \"105,500\",\n      },\n      {\n        answer: \"Iceland\",\n        value: \"355,620\",\n      },\n      {\n        answer: \"Malta\",\n        value: \"475,701\",\n      },\n      {\n        answer: \"Luxembourg\",\n        value: \"626,108\",\n      },\n      {\n        answer: \"Montenegro\",\n        value: \"622,359\",\n      },\n    ],\n  },\n];\n","import React, { Component } from \"react\";\nimport \"../css/quiz.css\";\nimport { SET1 } from \"../data/questions\";\nimport correct from \"../data/14876504_correct_by_robotsound_preview.mp3\";\nimport wrong from \"../data/23205030_game-show-buzzer-wrong-answer_by_floraphonic_preview.mp3\";\nimport FlipMove from \"react-flip-move\";\nimport classnames from \"classnames\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      players: [],\n      playerScores: [],\n      originalOrderPlayerScores: [],\n      misses: [],\n      questions: SET1,\n      currentRound: 0,\n      allOut: false,\n      revealAllAnswers: false,\n      currentPlayer: {\n        name: \"\",\n        score: 0,\n        colour: \"\",\n        questions: [],\n        wrongAnswers: [],\n      },\n    };\n    this.initialiseGame = this.initialiseGame.bind(this);\n    this.shufflePlayers = this.shufflePlayers.bind(this);\n    this.getColour = this.getColour.bind(this);\n    this.updateResult = this.updateResult.bind(this);\n    this.sortScores = this.sortScores.bind(this);\n    this.advancePlayer = this.advancePlayer.bind(this);\n    this.showAnswers = this.showAnswers.bind(this);\n    this.nextRound = this.nextRound.bind(this);\n    this.undoLastAnswer = this.undoLastAnswer.bind(this);\n  }\n  componentDidMount() {\n    let players = this.props.location.state.players;\n    this.setState(\n      {\n        players: players,\n      },\n      () => this.initialiseGame()\n    );\n  }\n\n  allPlayersOut() {\n    let outPlayers = 0;\n    this.state.playerScores.forEach((player) => {\n      if (player.wrongAnswers[this.state.currentRound] === 2) {\n        outPlayers++;\n      }\n    });\n    return outPlayers === this.state.playerScores.length;\n  }\n\n  undoLastAnswer() {\n    if (this.state.result) {\n      const result = this.state.result;\n      const player = this.state.result.player;\n\n      let scoreChangeValue = \"\";\n\n      if (result.outcome === \"wrong\") {\n        player.score = player.score + 10;\n        scoreChangeValue = \"+10\";\n        player.wrongAnswers[this.state.currentRound] =\n          player.wrongAnswers[this.state.currentRound] - 1;\n      } else if (result.outcome === \"correct\") {\n        player.score = player.score - result.score;\n        scoreChangeValue = \"-\" + result.score;\n      }\n\n      this.state.misses.pop();\n\n      this.setState(\n        {\n          scoreChange: {\n            name: player.name,\n            value: scoreChangeValue,\n          },\n          result: result,\n          currentPlayer: player,\n        },\n        () => {\n          this.sortScores();\n        }\n      );\n    }\n  }\n\n  advancePlayer() {\n    if (!this.allPlayersOut()) {\n      const currentPlayerName = this.state.currentPlayer.name;\n      let currentIndex = this.state.originalOrderPlayerScores.findIndex(\n        (player) => player.name === currentPlayerName\n      );\n\n      let nextIndex = -1;\n\n      let found = false;\n      while (!found) {\n        nextIndex =\n          currentIndex === 0\n            ? this.state.originalOrderPlayerScores.length - 1\n            : currentIndex - 1;\n\n        if (\n          this.state.originalOrderPlayerScores[nextIndex].wrongAnswers[\n            this.state.currentRound\n          ] < 2\n        ) {\n          found = true;\n        }\n        currentIndex = nextIndex;\n      }\n\n      this.setState({\n        currentPlayer: this.state.originalOrderPlayerScores[nextIndex],\n      });\n    } else {\n      this.setState({\n        allOut: true,\n      });\n    }\n  }\n\n  showAnswers() {\n    this.setState(\n      {\n        revealAllAnswers: true,\n        answer: undefined,\n      },\n      () => this.forceUpdate()\n    );\n  }\n\n  nextRound() {\n    this.state.playerScores.forEach((player) => {\n      player.wrongAnswers.push(0);\n    });\n    this.setState(\n      {\n        currentRound: this.state.currentRound + 1,\n        revealAllAnswers: false,\n        scoreChange: undefined,\n        allOut: false,\n        misses: [],\n        originalOrderPlayerScores: [...this.state.playerScores],\n        currentPlayer: this.state.playerScores[\n          this.state.playerScores.length - 1\n        ],\n      },\n      () => this.forceUpdate()\n    );\n  }\n\n  updateResult(result) {\n    if (result.outcome !== \"used\") {\n      var scoreChangeValue = \"\";\n      if (result.outcome === \"correct\") {\n        this.state.currentPlayer.score += result.score;\n        scoreChangeValue = \"+\" + result.score;\n      } else if (result.outcome === \"wrong\") {\n        this.setState({\n          misses: this.state.misses.concat(result),\n        });\n        this.state.currentPlayer.score -= 10;\n        scoreChangeValue = \"-\" + 10;\n        if (\n          this.state.currentPlayer.wrongAnswers &&\n          this.state.currentPlayer.wrongAnswers[this.state.currentRound]\n        ) {\n          this.state.currentPlayer.wrongAnswers[this.state.currentRound]++;\n        } else {\n          this.state.currentPlayer.wrongAnswers[this.state.currentRound] = 1;\n        }\n      }\n      this.setState(\n        {\n          scoreChange: {\n            name: this.state.currentPlayer.name,\n            value: scoreChangeValue,\n          },\n          result: result,\n        },\n        () => {\n          this.advancePlayer();\n          this.sortScores();\n        }\n      );\n    }\n    console.log(\"end of update result\");\n  }\n\n  sortScores() {\n    const sortedScores = [...this.state.playerScores];\n    sortedScores.sort((player1, player2) => player2.score - player1.score);\n    this.setState(\n      {\n        playerScores: sortedScores,\n      },\n      () => {\n        this.forceUpdate();\n      }\n    );\n  }\n\n  getColour(i) {\n    return [\"red\", \"cyan\", \"green\", \"yellow\", \"orange\"][i];\n  }\n\n  initialiseGame() {\n    let playerScores = [];\n    this.state.players.forEach((player, i) => {\n      playerScores.push({\n        name: player,\n        score: 0,\n        colour: this.getColour(i),\n        wrongAnswers: [0],\n      });\n    });\n    this.setState(\n      {\n        playerScores: playerScores,\n        currentPlayer: playerScores[playerScores.length - 1],\n      },\n      () => {\n        this.shufflePlayers();\n      }\n    );\n  }\n\n  shufflePlayers() {\n    let newPlayerScores = this.state.playerScores,\n      currentIndex = this.state.playerScores.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = newPlayerScores[currentIndex];\n      newPlayerScores[currentIndex] = newPlayerScores[randomIndex];\n      newPlayerScores[randomIndex] = temporaryValue;\n    }\n    this.setState(\n      {\n        playerScores: newPlayerScores,\n        originalOrderPlayerScores: newPlayerScores,\n      },\n      () => this.forceUpdate()\n    );\n  }\n\n  render() {\n    const mainScreen =\n      this.state.currentRound === this.state.questions.length ? (\n        <div>\n          <FinalResult playerScores={this.state.playerScores} />\n        </div>\n      ) : (\n        <React.Fragment>\n          <h6>\n            Round {this.state.currentRound + 1}/{this.state.questions.length}\n          </h6>\n          <Round\n            question={this.state.questions[this.state.currentRound]}\n            currentRound={this.state.currentRound}\n            playerScores={this.state.playerScores}\n            updateResult={this.updateResult}\n            currentPlayer={this.state.currentPlayer}\n            allOut={this.state.allOut}\n            revealAllAnswers={this.state.revealAllAnswers}\n          />\n        </React.Fragment>\n      );\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col s3\">\n            <Leaderboard\n              playerScores={this.state.playerScores}\n              currentPlayer={this.state.currentPlayer}\n              scoreChange={this.state.scoreChange}\n            />\n\n            <Controls\n              showAnswers={this.showAnswers}\n              revealAllAnswers={this.state.revealAllAnswers}\n              nextRound={this.nextRound}\n              misses={this.state.misses}\n              undoLastAnswer={this.undoLastAnswer}\n            />\n          </div>\n\n          <div className=\"col s9\">{mainScreen}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Controls(props) {\n  let buttons = \"\";\n  if (props.revealAllAnswers) {\n    buttons = (\n      <button\n        style={{\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\",\n        }}\n        onClick={() => props.nextRound()}\n        className=\"btn btn-large waves-effect waves-light hoverable green accent-3\"\n      >\n        Next round\n      </button>\n    );\n  } else {\n    buttons = (\n      <div>\n        <div>\n          <button\n            style={{\n              width: \"150px\",\n              borderRadius: \"3px\",\n              letterSpacing: \"1.5px\",\n              marginTop: \"1rem\",\n            }}\n            onClick={() => props.undoLastAnswer()}\n            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n          >\n            Undo\n          </button>\n        </div>\n        <div>\n          <button\n            style={{\n              width: \"150px\",\n              borderRadius: \"3px\",\n              letterSpacing: \"1.5px\",\n              marginTop: \"1rem\",\n            }}\n            onClick={() => endRound()}\n            className=\"btn btn-large waves-effect waves-light hoverable red accent-3\"\n          >\n            End round\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const endRound = () => {\n    confirmAlert({\n      title: \"End round?\",\n      message: \"All answers will be revealed\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => props.showAnswers(),\n        },\n        {\n          label: \"Cancel\",\n          onClick: () => console.log(\"canceled\"),\n        },\n      ],\n    });\n  };\n\n  const missesList = props.misses.map((miss, i) => (\n    <div key={i}>\n      {miss.player.name}: {miss.guess}\n    </div>\n  ));\n\n  return (\n    <div>\n      <div\n        style={{\n          marginTop: \"50px\",\n          height: \"100px\",\n        }}\n      >\n        <h5>Misses</h5>\n        {missesList}\n      </div>\n      <div\n        style={{\n          marginTop: \"150px\",\n        }}\n      >\n        {buttons}\n      </div>\n    </div>\n  );\n}\n\nfunction FinalResult(props) {\n  const listItems = props.playerScores.map((player, i) => (\n    <div key={player.name} className=\"row\">\n      <div\n        className={classnames({\n          \"col s1\": true,\n        })}\n        style={{\n          minHeight: \"25px\",\n          backgroundColor: player.colour,\n        }}\n      ></div>\n\n      <div\n        className=\"col s4\"\n        style={{\n          margin: \"auto\",\n        }}\n      >\n        {player.name}\n      </div>\n\n      <div\n        className=\"col s1\"\n        style={{\n          margin: \"auto\",\n        }}\n      >\n        {player.score}\n      </div>\n    </div>\n  ));\n  return (\n    <React.Fragment>\n      <h5>Final Result</h5>\n      <div\n        style={{\n          marginLeft: \"15px\",\n          marginTop: \"15px\",\n        }}\n      >\n        <FlipMove duration=\"2000\">{listItems}</FlipMove>\n      </div>\n    </React.Fragment>\n  );\n}\n\nclass Leaderboard extends Component {\n  render() {\n    const listItems = this.props.playerScores.map((player, i) => (\n      <div key={player.name} className=\"row\">\n        <div\n          className={classnames({\n            \"col s1\": true,\n          })}\n          style={{\n            minHeight: \"25px\",\n            backgroundColor: player.colour,\n          }}\n        ></div>\n\n        <div\n          className=\"col s4\"\n          style={{\n            margin: \"auto\",\n          }}\n        >\n          {player.name}\n        </div>\n\n        <div\n          className=\"col s1\"\n          style={{\n            margin: \"auto\",\n          }}\n        >\n          {player.score}\n        </div>\n        <div\n          className=\"col s1\"\n          style={{\n            margin: \"auto\",\n          }}\n        >\n          <span\n            style={{\n              color:\n                this.props.scoreChange &&\n                this.props.scoreChange.value.includes(\"+\")\n                  ? \"limegreen\"\n                  : \"red\",\n            }}\n            className={classnames({\n              blink:\n                this.props.scoreChange &&\n                this.props.scoreChange.value &&\n                this.props.scoreChange.name === player.name,\n            })}\n          >\n            {this.props.scoreChange &&\n              this.props.scoreChange.name === player.name &&\n              this.props.scoreChange.value}\n          </span>\n        </div>\n      </div>\n    ));\n    return (\n      <React.Fragment>\n        <h5>Leaderboard</h5>\n        <div\n          style={{\n            marginLeft: \"15px\",\n            marginTop: \"15px\",\n          }}\n        >\n          <FlipMove duration=\"2000\">{listItems}</FlipMove>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Round extends Component {\n  constructor() {\n    super();\n    this.state = {\n      guess: \"\",\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.playAudio = this.playAudio.bind(this);\n    this.getResult = this.getResult.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.question) {\n      this.setState(\n        {\n          question: newProps.question,\n        },\n        () => this.forceUpdate()\n      );\n    }\n    if (newProps.currentRound !== this.props.currentRound) {\n      this.setState(\n        {\n          answer: undefined,\n        },\n        () => this.forceUpdate()\n      );\n    }\n    // if (this.props.revealAllAnswers) {\n    //   this.setState(\n    //     {\n    //       revealAllAnswers: this.props.revealAllAnswers,\n    //     },\n    //     () => this.forceUpdate()\n    //   );\n    // }\n  }\n\n  playAudio(audio) {\n    audio.play();\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if (this.state.guess.trim()) {\n      const result = this.getResult(this.state.guess);\n\n      if (result.outcome === \"wrong\") {\n        const wrongAudio = new Audio(wrong);\n        this.playAudio(wrongAudio);\n        this.setState({\n          guess: \"\",\n        });\n      } else if (result.outcome === \"used\") {\n        this.setState({\n          guess: \"\",\n        });\n      } else if (result.outcome === \"correct\") {\n        const correctAudio = new Audio(correct);\n        this.playAudio(correctAudio);\n        this.setState(\n          {\n            answer: result.answer,\n            guess: \"\",\n          },\n          () => this.forceUpdate()\n        );\n      }\n\n      this.props.updateResult(result);\n    }\n    console.log(\"end of on submit\");\n  }\n\n  getResult(guess) {\n    const answer = this.state.question.answers.find((answer) =>\n      answer.answer.toLowerCase().includes(guess.toLowerCase())\n    );\n\n    let result = {};\n\n    if (answer && !answer.hasOwnProperty(\"used\")) {\n      answer.used = false;\n      const position = this.state.question.answers.indexOf(answer);\n\n      result.outcome = \"correct\";\n      result.score = this.state.question.answers.length - position;\n\n      answer.player = this.props.currentPlayer;\n      answer.position = position;\n      result.player = this.props.currentPlayer;\n\n      result.answer = JSON.parse(JSON.stringify(answer));\n    } else if (answer && answer.hasOwnProperty(\"used\")) {\n      result.outcome = \"used\";\n    } else {\n      result.outcome = \"wrong\";\n      result.player = this.props.currentPlayer;\n      result.guess = guess;\n    }\n    return result;\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const question = this.props.question;\n\n    const currentPlayerFragment = this.props.allOut ? (\n      <span style={{ color: \"red\" }}>ALL OUT</span>\n    ) : (\n      <span>{this.props.currentPlayer.name}</span>\n    );\n\n    const playerGuessFragment = this.props.allOut ? (\n      <span style={{ color: \"red\" }}>ALL OUT</span>\n    ) : (\n      <button\n        style={{\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\",\n        }}\n        type=\"submit\"\n        className={\n          \"btn btn-large waves-effect waves-light hoverable \" +\n          this.props.currentPlayer.colour +\n          \" accent-3\"\n        }\n      >\n        {this.props.currentPlayer.name}\n      </button>\n    );\n\n    return (\n      <div style={{ height: \"1000px\" }}>\n        <div>\n          <FlipMove duration=\"2000\">\n            <div key={question.theme}>\n              <h5>{question.theme}</h5>\n            </div>\n            <div key={question.question}>\n              <h6>{question.question}</h6>\n            </div>\n            <div key={question.condition}>\n              <h6>{question.condition}</h6>\n            </div>\n          </FlipMove>\n        </div>\n\n        <div style={{ marginTop: \"30px\" }}>\n          <div className=\"row\">\n            <div className=\"col s12\" style={{ marginTop: \"10px\" }}>\n              <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s2\">\n                  <input\n                    onChange={this.onChange}\n                    value={this.state.guess}\n                    id=\"guess\"\n                    type=\"text\"\n                  />\n                  <label htmlFor=\"guess\">Guess</label>\n                </div>\n                <div className=\"col s2\">{playerGuessFragment}</div>\n              </form>\n            </div>\n          </div>\n          <div style={{ marginTop: \"40px\", alignItems: \"center\" }}>\n            <AnswerFields\n              numAnswers={this.props.question.answers.length}\n              submittedAnswer={this.state.answer}\n              revealAllAnswers={this.props.revealAllAnswers}\n              question={this.props.question}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass AnswerFields extends Component {\n  constructor() {\n    super();\n    this.state = {\n      answers: [],\n    };\n  }\n\n  componentDidMount() {\n    const numAnswers = this.props.numAnswers;\n    const newAnswers = [];\n    for (let i = 0; i < numAnswers; i++) {\n      newAnswers.push({});\n    }\n    this.setState({\n      answers: newAnswers,\n    });\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.question.question !== this.props.question.question) {\n      const numAnswers = newProps.numAnswers;\n      const newAnswers = [];\n      for (let i = 0; i < numAnswers; i++) {\n        newAnswers.push({});\n      }\n      this.setState(\n        {\n          answers: newAnswers,\n        },\n        () => this.forceUpdate()\n      );\n    }\n    if (newProps.submittedAnswer) {\n      const answer = newProps.submittedAnswer;\n      const newAnswers = this.state.answers;\n      newAnswers[answer.position] = answer;\n      this.setState({\n        answers: newAnswers,\n      });\n    }\n    if (newProps.revealAllAnswers) {\n      let newAnswers = [];\n      this.state.answers.forEach((answer, i) => {\n        if (!answer.player) {\n          let unguessedAnswer = this.props.question.answers[i];\n          unguessedAnswer.used = true;\n          let player = {\n            name: \"TEST\",\n            colour: \"#e6e9fc\",\n          };\n          unguessedAnswer.player = player;\n          newAnswers.push(unguessedAnswer);\n        } else {\n          newAnswers.push(answer);\n        }\n        this.setState(\n          {\n            answers: newAnswers,\n          },\n          () => this.forceUpdate()\n        );\n      });\n    }\n  }\n\n  render() {\n    const answerFields = [];\n\n    this.state.answers.forEach((answer, i) => {\n      answerFields.push(\n        <AnswerField key={i + this.props.question.question} answer={answer} />\n      );\n    });\n\n    return (\n      <div>\n        <FlipMove duration=\"2000\">{answerFields}</FlipMove>\n      </div>\n    );\n  }\n}\n\nclass AnswerField extends Component {\n  constructor() {\n    super();\n    this.state = {\n      answerText: \" \",\n    };\n  }\n\n  render() {\n    const answer = this.props.answer;\n    let text = \"\";\n    let backgroundColour = \"#e6e9fc\";\n    if (answer && answer.player) {\n      if (answer.hasOwnProperty(\"answer\")) {\n        text = text + answer.answer;\n        if (answer.hasOwnProperty(\"value\")) {\n          text = text + \": \" + answer.value;\n        }\n      }\n      backgroundColour = answer.player.colour || \"#e6e9fc\";\n    }\n    return (\n      <React.Fragment>\n        <div\n          className=\"row\"\n          style={{\n            marginTop: \"0px\",\n            marginBottom: \"0px\",\n          }}\n        >\n          <div\n            className=\"col s4\"\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"9px\",\n              minHeight: \"25px\",\n              border: \"1px solid grey\",\n              backgroundImage:\n                \"linear-gradient(to right, \" +\n                backgroundColour +\n                \", white,\" +\n                backgroundColour +\n                \")\",\n            }}\n          >\n            <b text> {text} </b>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.css\";\nimport AddPlayers from \"./components/addPlayers\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Game from \"./components/game\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Route path={process.env.PUBLIC_URL + \"/\"} component={AddPlayers} />\n        <Route path={process.env.PUBLIC_URL + \"/game\"} component={Game} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}